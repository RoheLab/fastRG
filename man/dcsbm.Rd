% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dcsbm.R
\name{dcsbm}
\alias{dcsbm}
\alias{dcsbm_params}
\title{Sample a degree corrected stochastic blockmodel graph}
\usage{
dcsbm(theta, pi, B, ...)

dcsbm_params(theta, pi, B)
}
\arguments{
\item{theta}{Node degree distribution parameter.}

\item{pi}{vector of length k, must be normalized. to allow independent
probabilities of membership in each block use the \code{\link[=dc_overlapping]{dc_overlapping()}}
model}

\item{B}{TODO -- import from SBM}

\item{...}{Arguments passed on to \code{fastRG}
\describe{
  \item{X}{An \code{n} by \code{k_1} matrix.}
  \item{S}{A \code{k_1} by \code{k_2} matrix.}
  \item{Y}{A \code{d} by \code{k_2} matrix. Defaults to \code{X}.}
  \item{avgDeg}{When specified, the expected average degree of nodes
in the output poisson multi-graph. When \code{poissonEdges = FALSE}, the
resulting graph will have lower average degree due to lack
of multiple-edges. When the graph is sparse, the expected number of
edges for the Poisson multi-graph and Bernoulli graph are nearly the
same. Defaults to \code{NULL}, such that no scaling occurs.}
  \item{simple}{When \code{TRUE} indicates that you want to work with undirected
graphs where self-loops and multi-edges are prohibited. Accomplishes
this by setting \code{directed = FALSE}, \code{selfLoops = FALSE}, and
\code{PoissonEdges = FALSE}, and then ignoring arguments \code{directed},
\code{selfLoops} and \code{PoissonEdges}. Defaults to \code{FALSE}.}
  \item{PoissonEdges}{Logical indicating whether or not multi-edges are
allowed. Defaults to \code{TRUE}, which keeps multi-edges and produces
a multi-graph. When \code{FALSE}, only single edges are allowed, resulting
in a graph. See \strong{details} for some additional comments. Effected by
\code{simple} argument.}
  \item{directed}{Logical indicating whether or not the graph should be
directed. Default is \code{directed = TRUE}. When \code{directed = FALSE},
symmetrizes \code{S} internally. When \code{X = Y} (which is the default when
no \code{Y} is specified), this results in a symmetric adjacency matrix
as output. When \code{avgDeg} is specified and the desired graph is directed,
the average degree scaling is on the out-degree of each node (or the
row sums if you prefer to think in terms of the adjacency matrix).
Effected by the \code{simple} argument.}
  \item{selfLoops}{Logical indicating whether edges are allowed from
a node back to itself. Defaults to \code{TRUE}. When \code{FALSE}, sampling
proceeds normally, and then self-loops are removed after sampling
is completed. Effected by the \code{simple} argument.}
  \item{returnEdgeList}{Logical indicating whether to return an edgelist
rather than an adjacency matrix.}
}}
}
\value{
A random Poisson (or Bernoulli) dot product graph. By default,
returns a \code{\link[Matrix:sparseMatrix]{Matrix::sparseMatrix()}} in CSC format (i.e. of abstract
class \code{CsparseMatrix}). When the graph is undirected, the \code{sparseMatrix}
will also be symmetric.

If \code{returnEdgeList = TRUE}, instead returns the graph as an edgelist
in matrix format, where the first column of the matrix contains two
columns \code{from} and \code{to} . The \code{from} column contains the index
of the outgoing edge in this case, and the \code{to} column contains
the index of the incoming edge.
}
\description{
Sample a degree corrected stochastic blockmodel graph
}
\details{
samples from a degree corrected stochastic blockmodel
pi a K vector, contains block sampling proportions
theta an n vector, contains degree parameters
B is K time K

Define \eqn{lambda_ij = theta[i] * theta[j]*B_{U,V}}
where U,V are blockmemberships of i and j, sampled from multinomial(pi)
i connects to j with probability 1- exp( -lambda_ij)

if lambda_ij is small, then 1- exp( -lambda_ij) approx lambda_ij
if avgDeg is set, then B is scaled so that the expected average
degree is avgDeg.

in fact, avgDeg is a slight upper bound that is good when
the graph is sparse.

to make function easy to parameterize, this function does not allow
for different degree distributions between blocks.
}
\examples{

set.seed(27)

n <- 1000
k <- 5

B <- matrix(runif(k * k), nrow = k, ncol = k)  # mixing probabilities

theta <- round(rlnorm(n, 2))  # degree parameter
pi <- c(1, 2, 4, 1, 1) / 5    # community membership

A <- dcsbm(theta, pi, B, avgDeg = 50)

}
\seealso{
\code{\link[=fastRG]{fastRG()}}

Other stochastic block models: \code{\link{dc_mixed}},
  \code{\link{dc_overlapping}}, \code{\link{sbm}}
}
\concept{stochastic block models}
