% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/erdos_renyi.R
\name{erdos_renyi}
\alias{erdos_renyi}
\alias{erdos_renyi_params}
\title{Sample an Erdos-Renyi graph}
\usage{
erdos_renyi(n, p = NULL, avgDeg = NULL, directed = FALSE, ...)

erdos_renyi_params(n, p = NULL, avgDeg = NULL, directed = FALSE, ...)
}
\arguments{
\item{n}{Number of nodes in graph.}

\item{p}{Probability of an edge between any two nodes. You must specify
either \code{p} or \code{avgDeg}. If you do not specify \code{p}, uses \code{avgDeg / n}.}

\item{avgDeg}{Desired average out degree. When specified, rescales
sampling probabilities to achieve the desired average out degree.
Defaults to \code{NULL}, such that there is no rescaling.}

\item{directed}{Defaults to \code{FALSE} for Erdos-Renyi graphs. The default
in the more general \code{\link[=fastRG]{fastRG()}} is \code{TRUE}.}

\item{...}{Arguments passed on to \code{fastRG}
\describe{
  \item{X}{An \code{n} by \code{k_1} matrix.}
  \item{S}{A \code{k_1} by \code{k_2} matrix.}
  \item{Y}{A \code{d} by \code{k_2} matrix. Defaults to \code{X}.}
  \item{avgDeg}{When specified, the expected average degree of nodes
in the output poisson multi-graph. When \code{poissonEdges = FALSE}, the
resulting graph will have lower average degree due to lack
of multiple-edges. When the graph is sparse, the expected number of
edges for the Poisson multi-graph and Bernoulli graph are nearly the
same. Defaults to \code{NULL}, such that no scaling occurs.}
  \item{simple}{When \code{TRUE} indicates that you want to work with undirected
graphs where self-loops and multi-edges are prohibited. Accomplishes
this by setting \code{directed = FALSE}, \code{selfLoops = FALSE}, and
\code{PoissonEdges = FALSE}, and then ignoring arguments \code{directed},
\code{selfLoops} and \code{PoissonEdges}. Defaults to \code{FALSE}.}
  \item{PoissonEdges}{Logical indicating whether or not multi-edges are
allowed. Defaults to \code{TRUE}, which keeps multi-edges and produces
a multi-graph. When \code{FALSE}, only single edges are allowed, resulting
in a graph. See \strong{details} for some additional comments. Effected by
\code{simple} argument.}
  \item{directed}{Logical indicating whether or not the graph should be
directed. Default is \code{directed = TRUE}. When \code{directed = FALSE},
symmetrizes \code{S} internally. When \code{X = Y} (which is the default when
no \code{Y} is specified), this results in a symmetric adjacency matrix
as output. When \code{avgDeg} is specified and the desired graph is directed,
the average degree scaling is on the out-degree of each node (or the
row sums if you prefer to think in terms of the adjacency matrix).
Effected by the \code{simple} argument.}
  \item{selfLoops}{Logical indicating whether edges are allowed from
a node back to itself. Defaults to \code{TRUE}. When \code{FALSE}, sampling
proceeds normally, and then self-loops are removed after sampling
is completed. Effected by the \code{simple} argument.}
  \item{returnEdgeList}{Logical indicating whether to return an edgelist
rather than an adjacency matrix.}
}}
}
\value{
Never returns Poisson edges.
}
\description{
Sample an Erdos-Renyi graph
}
\examples{

set.seed(27)

# get the random dot product parameters
erdos_renyi_params(n = 10, p = 0.1)

# sample a small graph
A <- erdos_renyi(n = 10, p = 0.1)
A

# out degree of each node
rowSums(A)

# in degree of each node
colSums(A)

# sample a much larger graph
B <- erdos_renyi(n = 10^6, avgDeg = 5)

}
\seealso{
\code{\link[=fastRG]{fastRG()}}

Other bernoulli graphs: \code{\link{chung_lu}}
}
\concept{bernoulli graphs}
