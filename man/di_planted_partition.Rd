% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/di_planted_partition.R
\name{di_planted_partition}
\alias{di_planted_partition}
\title{Sample a directed, balanced planted partition model}
\usage{
di_planted_partition(
  n,
  k,
  within_block = NULL,
  between_block = NULL,
  a = NULL,
  b = NULL,
  sort_nodes = FALSE,
  ...
)
}
\arguments{
\item{n}{Number of nodes in graph.}

\item{k}{Number of incoming (and outgoing) planted partitions.
There will be \code{k} incoming and \code{k} outgoing communities. In the future,
we may allow different numbers of incoming and outgoing communities
provided there is interest. Should be an integer.}

\item{within_block}{Probability of within block edges. Must be
strictly between zero and one. Must specify either
\code{within_block} and \code{between_block}, or \code{a} and \code{b} to determine
edge probabilities.}

\item{between_block}{Probability of between block edges. Must be
strictly between zero and one. Must specify either
\code{within_block} and \code{between_block}, or \code{a} and \code{b} to determine
edge probabilities.}

\item{a}{Integer such that \code{a/n} is the probability of edges
within a block. Useful for sparse graphs. Must specify either
\code{within_block} and \code{between_block}, or \code{a} and \code{b} to determine
edge probabilities.}

\item{b}{Integer such that \code{b/n} is the probability of edges
between blocks. Useful for sparse graphs. Must specify either
\code{within_block} and \code{between_block}, or \code{a} and \code{b} to determine
edge probabilities.}

\item{sort_nodes}{Logical indicating whether or not to sort the nodes
so that they are grouped by block. This incurs the the cost of a
radix sort, which is linear in the number of nodes in the graph.
Defaults to \code{FALSE}. Useful for plotting.}

\item{...}{
  Arguments passed on to \code{\link[=fastRG]{fastRG}}
  \describe{
    \item{\code{X}}{An \code{n} by \code{k_1} matrix.}
    \item{\code{S}}{A \code{k_1} by \code{k_2} matrix.}
    \item{\code{Y}}{A \code{d} by \code{k_2} matrix. Defaults to \code{X}.}
    \item{\code{avg_deg}}{When specified, rescales parameter such that the
expected degree is \code{avg_deg} in the Poisson multi-graph. When
\code{poisson_edges = FALSE}, the resulting graph will have lower a
average degree than \code{avg_deg} due to lack of multi-edges. When
the graph is sparse, the expected number of edges for the Poisson
multi-graph and Bernoulli graph are nearly the
same. Defaults to \code{NULL}, such that no scaling occurs.}
    \item{\code{simple}}{When \code{TRUE}, indicates that you want to work with undirected
graphs where self-loops and multi-edges are prohibited. Accomplishes
this by setting \code{directed = FALSE}, \code{allow_self_loops = FALSE}, and
\code{poisson_edges = FALSE}, and then ignoring arguments \code{directed},
\code{allow_self_loops} and \code{poisson_edges}. Defaults to \code{FALSE}.}
    \item{\code{poisson_edges}}{Logical indicating whether or not multi-edges are
allowed. Defaults to \code{TRUE}, which keeps multi-edges and produces
a multi-graph. When \code{FALSE}, only single edges are allowed, resulting
in a graph. See \strong{details} for some additional comments. Effected by
\code{simple} argument.}
    \item{\code{directed}}{Logical indicating whether or not the graph should be
directed. Default is \code{directed = TRUE}. When \code{directed = FALSE},
symmetrizes \code{S} internally. When \code{X = Y} (which is the default when
no \code{Y} is specified), this results in a symmetric adjacency matrix
as output. When \code{avg_deg} is specified and the desired graph is directed,
the average degree scaling is on the out-degree of each node (or the
row sums if you prefer to think in terms of the adjacency matrix).
Effected by the \code{simple} argument.}
    \item{\code{allow_self_loops}}{Logical indicating whether edges are allowed from
a node back to itself. Defaults to \code{TRUE}. When \code{FALSE}, sampling
proceeds normally, and then self-loops are removed after sampling
is completed. Effected by the \code{simple} argument.}
    \item{\code{return_edge_list}}{Logical indicating whether to return an edgelist
rather than an adjacency matrix. Defaults to \code{FALSE}.}
  }}
}
\value{
A random Poisson (or Bernoulli) dot product graph. By default,
returns a \code{\link[Matrix:sparseMatrix]{Matrix::sparseMatrix()}} in CSC format (i.e. of abstract
class \code{CsparseMatrix}). When the graph is undirected, the \code{sparseMatrix}
will also be symmetric.

If \code{return_edge_list = TRUE}, instead returns the graph as an edgelist
in matrix format, with contains two columns called \code{from} and \code{to}.
The \code{from} column contains the index of the outgoing edge,
and the \code{to} column contains the index of the incoming edge.
}
\description{
Sample a directed, balanced planted partition model
}
\details{
TODO: describe the generative model.
}
\examples{

set.seed(27)

A <- di_planted_partition(
  n = 1000,
  k = 3,
  within_block = 0.8,
  between_block = 0.2
)

B <- di_planted_partition(
  n = 1000,
  k = 3,
  a = 10,
  b = 4
)

}
\seealso{
\code{\link[=fastRG]{fastRG()}}

Other stochastic block models: 
\code{\link{dc_mixed}()},
\code{\link{dc_overlapping}()},
\code{\link{dcsbm}()},
\code{\link{di_dc_sbm}()},
\code{\link{di_planted_partition_params}()},
\code{\link{disbm_params}()},
\code{\link{disbm}()}

Other bernoulli graphs: 
\code{\link{chung_lu}()},
\code{\link{di_planted_partition_params}()},
\code{\link{erdos_renyi}()}

Other directed graphs: 
\code{\link{di_dc_sbm}()},
\code{\link{disbm}()}
}
\concept{bernoulli graphs}
\concept{directed graphs}
\concept{stochastic block models}
